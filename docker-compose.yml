services:
  siglip-api:
    build:
      context: .
    container_name: siglip2-api
    ports:
      - "8000:8000"
    environment:
      # Auto-scaling enabled by default (detects available hardware automatically)
      AUTO_SCALE_WORKERS: "true"
      CPU_UTILIZATION_FACTOR: "0.85"  # Docker-optimized CPU usage
      
      # Model and logging configuration
      SIGLIP_MODEL: "google/siglip2-base-patch16-512"  # Default model
      SIGLIP_VERBOSE_OUTPUT: "true"
      
      # Hugging Face cache
      HF_HOME: /home/app/.cache/huggingface
      
      # Performance tuning (auto-detected based on hardware, can be overridden)
      # BATCH_SIZE: "auto"  # Auto-detected: 16 for GPU, 6 for CPU
      # BATCH_WAIT_TIME_MS: "auto"  # Auto-detected: 75ms GPU, 35ms CPU
      # MAX_CONCURRENT_BATCHES: "auto"  # Auto-detected: 2 for GPU, 6 for CPU
      # MAX_QUEUE_SIZE: "1000"
      
      # Uncomment to use large model (more accurate, slower)
      # SIGLIP_MODEL: "google/siglip2-large-patch16-512"
      
      # Manual configuration (overrides auto-detection if needed)
      # MAX_CONCURRENT_BATCHES: "4"  # Set specific worker count
      # BATCH_SIZE: "8"  # Set specific batch size
    volumes:
      # Use a named volume for model cache
      - siglip-model-cache:/home/app/.cache
      
      # Mount a host directory for images (optional)
      # - ./images:/home/app/images:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Grace period for model loading and batch system initialization
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - litellm-network
    # Optional: Limit CPU cores for shared systems
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '6.0'  # Limit to 6 CPU cores
    #       memory: 8G   # Memory limit

# Named volume for model cache
volumes:
  siglip-model-cache:
    driver: local

# Define the external network
networks:
  litellm-network:
    external: true

